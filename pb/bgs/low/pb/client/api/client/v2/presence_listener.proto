syntax = "proto2";

package bgs.protocol.presence.v2;

import "google/protobuf/descriptor.proto";
import "bgs/low/pb/client/global_extensions/range.proto";
import "bgs/low/pb/client/global_extensions/field_options.proto";
import "bgs/low/pb/client/global_extensions/routing.proto";
import "bgs/low/pb/client/global_extensions/register_method_types.proto";
import "bgs/low/pb/client/global_extensions/method_options.proto";
import "bgs/low/pb/client/global_extensions/message_options.proto";
import "bgs/low/pb/client/global_extensions/service_options.proto";
import "bgs/low/pb/client/rpc_types.proto";
import "bgs/low/pb/client/api/client/v2/game_account_handle.proto";
import "bgs/low/pb/client/api/client/v2/attribute_types.proto";
import "bgs/low/pb/client/api/client/v2/presence_types.proto";

service PresenceListener {
	rpc OnPresenceStateUpdated(.bgs.protocol.presence.v2.PresenceStateUpdatedNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 1;
		option (method_options).handle_destination_unreachable = true;
	}
	rpc OnSubscribeFailure(.bgs.protocol.presence.v2.SubscribeFailureNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 2;
	}
	option (service_options).descriptor_name = "bnet.protocol.presence.v2.client.PresenceListener";
	option (service_options).type = SERVICE_TYPE_RPC_DIRECT;
	option (sdk_service_options).inbound = true;
	option (sdk_service_options).use_client_id = true;
}

message PresenceStateUpdatedNotification {
	optional uint64 subscriber_id = 1;
	repeated bgs.protocol.presence.v2.PresenceFieldState states = 2;
}
message SubscribeFailureResult {
	optional uint64 account_id = 1;
	optional uint32 status = 2;
}
message SubscribeFailureNotification {
	repeated bgs.protocol.presence.v2.SubscribeFailureResult failures = 1;
}

