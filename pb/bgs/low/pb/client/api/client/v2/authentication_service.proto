syntax = "proto2";

package bgs.protocol.authentication.v2.client;

import "google/protobuf/descriptor.proto";
import "bgs/low/pb/client/global_extensions/range.proto";
import "bgs/low/pb/client/global_extensions/field_options.proto";
import "bgs/low/pb/client/global_extensions/routing.proto";
import "bgs/low/pb/client/global_extensions/register_method_types.proto";
import "bgs/low/pb/client/global_extensions/method_options.proto";
import "bgs/low/pb/client/global_extensions/message_options.proto";
import "bgs/low/pb/client/global_extensions/service_options.proto";
import "bgs/low/pb/client/rpc_types.proto";
import "bgs/low/pb/client/api/client/v2/game_account_handle.proto";
import "bgs/low/pb/client/api/client/v2/authentication_types.proto";

option cc_generic_services = false;

service AuthenticationService {
	rpc Logon(.bgs.protocol.authentication.v2.client.LogonRequest) returns(.bgs.protocol.NoData) { 
		option (method_options).id = 1;
	}
	rpc VerifyAuthToken(.bgs.protocol.authentication.v2.client.VerifyAuthTokenRequest) returns(.bgs.protocol.NoData) { 
		option (method_options).id = 2;
	}
	rpc GenerateAuthToken(.bgs.protocol.authentication.v2.client.GenerateAuthTokenRequest) returns(.bgs.protocol.authentication.v2.client.GenerateAuthTokenResponse) { 
		option (method_options).id = 3;
	}
	option (service_options).descriptor_name = "bnet.protocol.authentication.v2.client.AuthenticationService";
	option (service_options).type = SERVICE_TYPE_RPC_DIRECT;
	option (sdk_service_options).outbound = true;
	option (sdk_service_options).use_client_id = true;
}

message LogonRequest {
	optional uint32 title_id = 1;
	optional string platform = 2;
	optional string locale = 3;
	optional uint32 application_version = 4;
	optional bgs.protocol.authentication.v2.client.LogonOptions logon_options = 10;
}
message VerifyAuthTokenRequest {
	optional bytes auth_token = 1;
}
message GenerateAuthTokenRequest {
	optional uint32 title_id = 1;
}
message GenerateAuthTokenResponse {
	optional bytes auth_token = 1;
}

