syntax = "proto2";

package bgs.protocol.authentication.v2.client;

import "google/protobuf/descriptor.proto";
import "bgs/low/pb/client/global_extensions/range.proto";
import "bgs/low/pb/client/global_extensions/field_options.proto";
import "bgs/low/pb/client/global_extensions/routing.proto";
import "bgs/low/pb/client/global_extensions/register_method_types.proto";
import "bgs/low/pb/client/global_extensions/method_options.proto";
import "bgs/low/pb/client/global_extensions/message_options.proto";
import "bgs/low/pb/client/global_extensions/service_options.proto";
import "bgs/low/pb/client/rpc_types.proto";
import "bgs/low/pb/client/api/client/v2/game_account_handle.proto";
import "bgs/low/pb/client/api/client/v2/authentication_types.proto";

option cc_generic_services = false;

service AuthenticationListener {
	rpc OnLogonComplete(.bgs.protocol.authentication.v2.client.LogonCompleteNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 1;
	}
	rpc OnLogonQueueUpdate(.bgs.protocol.authentication.v2.client.LogonQueueUpdateNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 2;
	}
	rpc OnLogonQueueEnd(.bgs.protocol.NoData) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 3;
	}
	rpc OnExternalChallenge(.bgs.protocol.authentication.v2.client.ExternalChallengeNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 4;
	}
	option (service_options).descriptor_name = "bnet.protocol.authentication.v2.client.AuthenticationListener";
	option (service_options).type = SERVICE_TYPE_RPC_DIRECT;
	option (sdk_service_options).inbound = true;
	option (sdk_service_options).use_client_id = true;
}

message LogonCompleteNotification {
	optional uint32 error_code = 1;
	optional bgs.protocol.authentication.v2.client.LogonRecord record = 2;
}
message LogonQueueUpdateNotification {
	optional bgs.protocol.authentication.v2.client.LogonQueueState state = 1;
}
message ExternalChallengeNotification {
	optional string request_token = 1;
	optional string payload_type = 2;
	optional bytes payload = 3;
}

