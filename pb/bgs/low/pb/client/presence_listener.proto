syntax = "proto2";

package bgs.protocol.presence.v1;

import "bgs/low/pb/client/global_extensions/field_options.proto";
import "bgs/low/pb/client/global_extensions/message_options.proto";
import "bgs/low/pb/client/global_extensions/method_options.proto";
import "bgs/low/pb/client/global_extensions/service_options.proto";
import "bgs/low/pb/client/rpc_types.proto";
import "bgs/low/pb/client/account_types.proto";
import "bgs/low/pb/client/presence_types.proto";

service PresenceListener {
	rpc OnSubscribe(.bgs.protocol.presence.v1.SubscribeNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 1;
		option (method_options).handle_destination_unreachable = true;
	}
	rpc OnStateChanged(.bgs.protocol.presence.v1.StateChangedNotification) returns(.bgs.protocol.NO_RESPONSE) { 
		option (method_options).id = 2;
		option (method_options).handle_destination_unreachable = true;
	}
	option (service_options).descriptor_name = "bnet.protocol.presence.v1.PresenceListener";
	option (service_options).type = SERVICE_TYPE_RPC_DIRECT;
	option (sdk_service_options).inbound = true;
}

message SubscribeNotification {
	optional bgs.protocol.account.v1.AccountId subscriber_id = 1;
	repeated bgs.protocol.presence.v1.PresenceState state = 2;
}
message StateChangedNotification {
	optional bgs.protocol.account.v1.AccountId subscriber_id = 1;
	repeated bgs.protocol.presence.v1.PresenceState state = 2;
}

